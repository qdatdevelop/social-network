{"ast":null,"code":"import { GROUP_CREATE_FAIL, GROUP_CREATE_REQUEST, GROUP_CREATE_SUCCESS, GROUP_DELETE_FAIL, GROUP_DELETE_REQUEST, GROUP_DELETE_SUCCESS, GROUP_EDIT_FAIL, GROUP_EDIT_REQUEST, GROUP_EDIT_SUCCESS, GROUP_LIST_FAIL, GROUP_LIST_REQUEST, GROUP_LIST_SUCCESS, GROUP_UPDATE_FAIL, GROUP_UPDATE_REQUEST, GROUP_UPDATE_SUCCESS } from \"../Constants/GroupConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\nexport const listGroups = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/getAllGroups`, config);\n    dispatch({\n      type: GROUP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: GROUP_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\n// DELETE GROUP\n// export const deleteProduct = (id) => async (dispatch, getState) => {\n//   try {\n//     dispatch({ type: GROUP_DELETE_REQUEST });\n\n//     const {\n//       userLogin: { userInfo },\n//     } = getState();\n\n//     const config = {\n//       headers: {\n//         Authorization: `Bearer ${userInfo.token}`,\n//       },\n//     };\n\n//     await axios.delete(`/api/products/${id}`, config);\n\n//     dispatch({ type: GROUP_DELETE_SUCCESS });\n//   } catch (error) {\n//     const message =\n//       error.response && error.response.data.message\n//         ? error.response.data.message\n//         : error.message;\n//     if (message === \"Not authorized, token failed\") {\n//       dispatch(logout());\n//     }\n//     dispatch({\n//       type: GROUP_DELETE_FAIL,\n//       payload: message,\n//     });\n//   }\n// };","map":{"version":3,"names":["GROUP_CREATE_FAIL","GROUP_CREATE_REQUEST","GROUP_CREATE_SUCCESS","GROUP_DELETE_FAIL","GROUP_DELETE_REQUEST","GROUP_DELETE_SUCCESS","GROUP_EDIT_FAIL","GROUP_EDIT_REQUEST","GROUP_EDIT_SUCCESS","GROUP_LIST_FAIL","GROUP_LIST_REQUEST","GROUP_LIST_SUCCESS","GROUP_UPDATE_FAIL","GROUP_UPDATE_REQUEST","GROUP_UPDATE_SUCCESS","axios","logout","listGroups","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response"],"sources":["C:/Users/votha/OneDrive/Máy tính/facebook/facebook/admin/src/Redux/Actions/GroupActions.js"],"sourcesContent":["import {\r\n  GROUP_CREATE_FAIL,\r\n  GROUP_CREATE_REQUEST,\r\n  GROUP_CREATE_SUCCESS,\r\n  GROUP_DELETE_FAIL,\r\n  GROUP_DELETE_REQUEST,\r\n  GROUP_DELETE_SUCCESS,\r\n  GROUP_EDIT_FAIL,\r\n  GROUP_EDIT_REQUEST,\r\n  GROUP_EDIT_SUCCESS,\r\n  GROUP_LIST_FAIL,\r\n  GROUP_LIST_REQUEST,\r\n  GROUP_LIST_SUCCESS,\r\n  GROUP_UPDATE_FAIL,\r\n  GROUP_UPDATE_REQUEST,\r\n  GROUP_UPDATE_SUCCESS,\r\n} from \"../Constants/GroupConstants\";\r\nimport axios from \"axios\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listGroups = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GROUP_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`http://localhost:8000/getAllGroups`, config);\r\n\r\n    dispatch({ type: GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: GROUP_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// DELETE GROUP\r\n// export const deleteProduct = (id) => async (dispatch, getState) => {\r\n//   try {\r\n//     dispatch({ type: GROUP_DELETE_REQUEST });\r\n\r\n//     const {\r\n//       userLogin: { userInfo },\r\n//     } = getState();\r\n\r\n//     const config = {\r\n//       headers: {\r\n//         Authorization: `Bearer ${userInfo.token}`,\r\n//       },\r\n//     };\r\n\r\n//     await axios.delete(`/api/products/${id}`, config);\r\n\r\n//     dispatch({ type: GROUP_DELETE_SUCCESS });\r\n//   } catch (error) {\r\n//     const message =\r\n//       error.response && error.response.data.message\r\n//         ? error.response.data.message\r\n//         : error.message;\r\n//     if (message === \"Not authorized, token failed\") {\r\n//       dispatch(logout());\r\n//     }\r\n//     dispatch({\r\n//       type: GROUP_DELETE_FAIL,\r\n//       payload: message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SACEA,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,EACpBC,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,EACpBC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,kBAAkB,EAClBC,iBAAiB,EACjBC,oBAAoB,EACpBC,oBAAoB,QACf,6BAA6B;AACpC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,eAAe;AAEtC,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC5D,IAAI;IACFD,QAAQ,CAAC;MAAEE,IAAI,EAAEV;IAAmB,CAAC,CAAC;IAEtC,MAAM;MACJW,SAAS,EAAE;QAAEC;MAAS;IACxB,CAAC,GAAGH,QAAQ,CAAC,CAAC;IAEd,MAAMI,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC1C;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,oCAAmC,EAAEL,MAAM,CAAC;IAE9EL,QAAQ,CAAC;MAAEE,IAAI,EAAET,kBAAkB;MAAEkB,OAAO,EAAEF;IAAK,CAAC,CAAC;EACvD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMC,OAAO,GACXD,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACL,IAAI,CAACI,OAAO,GACzCD,KAAK,CAACE,QAAQ,CAACL,IAAI,CAACI,OAAO,GAC3BD,KAAK,CAACC,OAAO;IACnB,IAAIA,OAAO,KAAK,8BAA8B,EAAE;MAC9Cb,QAAQ,CAACF,MAAM,CAAC,CAAC,CAAC;IACpB;IACAE,QAAQ,CAAC;MACPE,IAAI,EAAEX,eAAe;MACrBoB,OAAO,EAAEE;IACX,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}