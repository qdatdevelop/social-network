{"ast":null,"code":"import { GROUP_CREATE_FAIL, GROUP_CREATE_REQUEST, GROUP_CREATE_SUCCESS, GROUP_DELETE_FAIL, GROUP_DELETE_REQUEST, GROUP_DELETE_SUCCESS, GROUP_EDIT_FAIL, GROUP_EDIT_REQUEST, GROUP_EDIT_SUCCESS, GROUP_LIST_FAIL, GROUP_LIST_REQUEST, GROUP_LIST_SUCCESS, GROUP_UPDATE_FAIL, GROUP_UPDATE_REQUEST, GROUP_UPDATE_SUCCESS } from \"../Constants/ProductConstants\";\nimport axios from \"axios\";\nimport { logout } from \"./userActions\";\nexport const listGroups = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/products/all`, config);\n    dispatch({\n      type: GROUP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: GROUP_LIST_FAIL,\n      payload: message\n    });\n  }\n};\n\n// DELETE GROUP\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: GROUP_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: GROUP_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\n\n// CREATE GROUP\nexport const createProduct = (name, price, description, image, countInStock) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/products/`, {\n      name,\n      price,\n      description,\n      image,\n      countInStock\n    }, config);\n    dispatch({\n      type: GROUP_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: GROUP_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\n\n// EDIT GROUP\nexport const editProduct = id => async dispatch => {\n  try {\n    dispatch({\n      type: GROUP_EDIT_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: GROUP_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: GROUP_EDIT_FAIL,\n      payload: message\n    });\n  }\n};\n\n// UPDATE GROUP\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: GROUP_UPDATE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: GROUP_EDIT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: GROUP_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["GROUP_CREATE_FAIL","GROUP_CREATE_REQUEST","GROUP_CREATE_SUCCESS","GROUP_DELETE_FAIL","GROUP_DELETE_REQUEST","GROUP_DELETE_SUCCESS","GROUP_EDIT_FAIL","GROUP_EDIT_REQUEST","GROUP_EDIT_SUCCESS","GROUP_LIST_FAIL","GROUP_LIST_REQUEST","GROUP_LIST_SUCCESS","GROUP_UPDATE_FAIL","GROUP_UPDATE_REQUEST","GROUP_UPDATE_SUCCESS","axios","logout","listGroups","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","deleteProduct","id","delete","createProduct","name","price","description","image","countInStock","post","editProduct","updateProduct","product","put","_id"],"sources":["C:/Users/votha/OneDrive/Máy tính/facebook/Dockerrizing/admin/src/Redux/Actions/groupActions.js"],"sourcesContent":["import {\r\n  GROUP_CREATE_FAIL,\r\n  GROUP_CREATE_REQUEST,\r\n  GROUP_CREATE_SUCCESS,\r\n  GROUP_DELETE_FAIL,\r\n  GROUP_DELETE_REQUEST,\r\n  GROUP_DELETE_SUCCESS,\r\n  GROUP_EDIT_FAIL,\r\n  GROUP_EDIT_REQUEST,\r\n  GROUP_EDIT_SUCCESS,\r\n  GROUP_LIST_FAIL,\r\n  GROUP_LIST_REQUEST,\r\n  GROUP_LIST_SUCCESS,\r\n  GROUP_UPDATE_FAIL,\r\n  GROUP_UPDATE_REQUEST,\r\n  GROUP_UPDATE_SUCCESS,\r\n} from \"../Constants/ProductConstants\";\r\nimport axios from \"axios\";\r\nimport { logout } from \"./userActions\";\r\n\r\nexport const listGroups = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GROUP_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/products/all`, config);\r\n\r\n    dispatch({ type: GROUP_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: GROUP_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// DELETE GROUP\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GROUP_DELETE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({ type: GROUP_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: GROUP_DELETE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// CREATE GROUP\r\nexport const createProduct =\r\n  (name, price, description, image, countInStock) =>\r\n  async (dispatch, getState) => {\r\n    try {\r\n      dispatch({ type: GROUP_CREATE_REQUEST });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.post(\r\n        `/api/products/`,\r\n        { name, price, description, image, countInStock },\r\n        config\r\n      );\r\n\r\n      dispatch({ type: GROUP_CREATE_SUCCESS, payload: data });\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message;\r\n      if (message === \"Not authorized, token failed\") {\r\n        dispatch(logout());\r\n      }\r\n      dispatch({\r\n        type: GROUP_CREATE_FAIL,\r\n        payload: message,\r\n      });\r\n    }\r\n  };\r\n\r\n// EDIT GROUP\r\nexport const editProduct = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: GROUP_EDIT_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({ type: GROUP_EDIT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: GROUP_EDIT_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n// UPDATE GROUP\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: GROUP_UPDATE_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    );\r\n\r\n    dispatch({ type: GROUP_UPDATE_SUCCESS, payload: data });\r\n    dispatch({ type: GROUP_EDIT_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: GROUP_UPDATE_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}