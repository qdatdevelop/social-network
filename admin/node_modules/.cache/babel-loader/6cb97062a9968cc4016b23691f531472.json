{"ast":null,"code":"import { REPORT_LIST_FAIL, REPORT_LIST_REQUEST, REPORT_LIST_SUCCESS } from \"../Constants/ReportConstants\";\nimport { logout } from \"./userActions\";\nimport axios from \"axios\";\nexport const listReports = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: REPORT_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://localhost:8000/getReportsToAdmin`, config);\n    dispatch({\n      type: REPORT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    if (message === \"Not authorized, token failed\") {\n      dispatch(logout());\n    }\n    dispatch({\n      type: REPORT_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"names":["REPORT_LIST_FAIL","REPORT_LIST_REQUEST","REPORT_LIST_SUCCESS","logout","axios","listReports","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response"],"sources":["C:/Users/votha/OneDrive/Máy tính/facebook/Dockerrizing/admin/src/Redux/Actions/ReportActions.js"],"sourcesContent":["import {\r\n  REPORT_LIST_FAIL,\r\n  REPORT_LIST_REQUEST,\r\n  REPORT_LIST_SUCCESS,\r\n} from \"../Constants/ReportConstants\";\r\nimport { logout } from \"./userActions\";\r\nimport axios from \"axios\";\r\n\r\nexport const listReports = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: REPORT_LIST_REQUEST });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`http://localhost:8000/getReportsToAdmin`, config);\r\n\r\n    dispatch({ type: REPORT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message;\r\n    if (message === \"Not authorized, token failed\") {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: REPORT_LIST_FAIL,\r\n      payload: message,\r\n    });\r\n  }\r\n};\r\n\r\n"],"mappings":"AAAA,SACEA,gBAAgB,EAChBC,mBAAmB,EACnBC,mBAAmB,QACd,8BAA8B;AACrC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAM,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC7D,IAAI;IACFD,QAAQ,CAAC;MAAEE,IAAI,EAAEP;IAAoB,CAAC,CAAC;IAEvC,MAAM;MACJQ,SAAS,EAAE;QAAEC;MAAS;IACxB,CAAC,GAAGH,QAAQ,CAAC,CAAC;IAEd,MAAMI,MAAM,GAAG;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAC1C;IACF,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,yCAAwC,EAAEL,MAAM,CAAC;IAEnFL,QAAQ,CAAC;MAAEE,IAAI,EAAEN,mBAAmB;MAAEe,OAAO,EAAEF;IAAK,CAAC,CAAC;EACxD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACd,MAAMC,OAAO,GACXD,KAAK,CAACE,QAAQ,IAAIF,KAAK,CAACE,QAAQ,CAACL,IAAI,CAACI,OAAO,GACzCD,KAAK,CAACE,QAAQ,CAACL,IAAI,CAACI,OAAO,GAC3BD,KAAK,CAACC,OAAO;IACnB,IAAIA,OAAO,KAAK,8BAA8B,EAAE;MAC9Cb,QAAQ,CAACH,MAAM,CAAC,CAAC,CAAC;IACpB;IACAG,QAAQ,CAAC;MACPE,IAAI,EAAER,gBAAgB;MACtBiB,OAAO,EAAEE;IACX,CAAC,CAAC;EACJ;AACF,CAAC"},"metadata":{},"sourceType":"module"}